{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,I,EAGQ,EASA,EAZF,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAmB,SAAS,oBAAoB,CAAC,Q,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAUrD,CAPM,EAAY,EAAa,GAAG,CAAC,SAAC,CAApC,EAEE,IAAM,EAAgB,OAAO,AADd,EAAG,OAAO,CAAC,MAAM,CACI,OAAO,CAAC,SAAU,KAEtD,MAAO,CAAE,QAAS,EAAI,OAAQ,CAAc,CAC9C,IAEU,IAAI,CAAC,SAAC,CAAA,CAAK,CAArB,EAA6B,OAAA,EAAI,MAAM,CAAG,EAAI,MAAM,A,GAE9C,EAAW,CAAY,CAAC,EAAE,CAAC,UAAU,CAE3C,EAAU,OAAO,CAAC,SAAlB,CAAA,EAAqB,IAAA,EAAA,EAAA,OAAA,CACnB,EAAS,WAAW,CAAC,EACvB,GAsBF,QAAQ,GAAG,CAlBiB,EAAa,GAAG,CAAC,SAAC,CAA5C,EAME,MAAO,CACL,KANW,EAAG,WAAW,CAAC,IAAI,GAO9B,SANe,EAAG,OAAO,CAAC,QAAQ,CAOlC,OANa,EAAG,OAAO,CAAC,MAAM,CAO9B,IANU,EAAG,OAAO,CAAC,GAAG,AAO1B,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar listEmployes = _to_consumable_array(document.getElementsByTagName(\"li\"));\nfunction sortList() {\n    var salaryArr = listEmployes.map(function(el) {\n        var salary = el.dataset.salary;\n        var numericSalary = Number(salary.replace(/[\\$,]/g, \"\"));\n        return {\n            element: el,\n            salary: numericSalary\n        };\n    });\n    salaryArr.sort(function(fEl, sEl) {\n        return sEl.salary - fEl.salary;\n    });\n    var parentLi = listEmployes[0].parentNode;\n    salaryArr.forEach(function(param) {\n        var element = param.element;\n        parentLi.appendChild(element);\n    });\n}\nfunction getEmployees() {\n    var objectOfEmployees = listEmployes.map(function(el) {\n        var name = el.textContent.trim();\n        var position = el.dataset.position;\n        var salary = el.dataset.salary;\n        var age = el.dataset.age;\n        return {\n            name: name,\n            position: position,\n            salary: salary,\n            age: age\n        };\n    });\n    return objectOfEmployees;\n}\nsortList();\nconsole.log(getEmployees());\n\n//# sourceMappingURL=index.c4f65673.js.map\n","'use strict';\n\nconst listEmployes = [...document.getElementsByTagName('li')];\n\nfunction sortList() {\n  const salaryArr = listEmployes.map((el) => {\n    const salary = el.dataset.salary;\n    const numericSalary = Number(salary.replace(/[\\$,]/g, ''));\n\n    return { element: el, salary: numericSalary };\n  });\n\n  salaryArr.sort((fEl, sEl) => sEl.salary - fEl.salary);\n\n  const parentLi = listEmployes[0].parentNode;\n\n  salaryArr.forEach(({ element }) => {\n    parentLi.appendChild(element);\n  });\n}\n\nfunction getEmployees() {\n  const objectOfEmployees = listEmployes.map((el) => {\n    const name = el.textContent.trim();\n    const position = el.dataset.position;\n    const salary = el.dataset.salary;\n    const age = el.dataset.age;\n\n    return {\n      name,\n      position,\n      salary,\n      age,\n    };\n  });\n\n  return objectOfEmployees;\n}\n\nsortList();\nconsole.log(getEmployees());\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","salaryArr","parentLi","listEmployes","_array_without_holes","isArray","document","getElementsByTagName","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","map","el","numericSalary","Number","salary","dataset","replace","element","sort","fEl","sEl","parentNode","forEach","param","appendChild","console","log","textContent","trim","position","age"],"version":3,"file":"index.c4f65673.js.map"}